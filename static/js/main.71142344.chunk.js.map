{"version":3,"sources":["components/ContactsForm/StyledComponents.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/StyledComponents.js","components/ContactsList/ContactsList.jsx","components/Section/StyledComponents.js","components/Section/Section.jsx","components/ContactsFilter/StyledComponents.js","components/ContactsFilter/ContactsFilter.jsx","components/App.js","index.js"],"names":["Form","styled","form","FormLabel","label","Input","input","Button","button","INITIAL_STATE","name","number","ContactsForm","state","handleInputChange","event","target","value","setState","handleSubmitForm","e","preventDefault","Number","isNaN","alert","props","addContact","resetForm","this","onSubmit","type","placeholder","onChange","Component","TaskList","ul","TaskItem","li","TaskItemElements","p","ContactsList","items","onDeleteContact","map","i","onClick","id","Section","section","Title","h2","SectionBlock","title","children","FilterBlock","div","Label","FilterContacts","OnInputFilter","App","contacts","nameFilter","find","contact","uuidv4","filterContactList","filter","item","toLowerCase","includes","deleteContact","prevState","contactsFilterInput","inputValue","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71142344.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Form = styled.form`\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nconst FormLabel = styled.label`\n  width: 85%;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-around;\n  font-weight: 500;\n  color: #ff18cd;\n`;\nconst Input = styled.input`\n  height: 15px;\n  width: 250px;\n`;\n\nconst Button = styled.button`\n  padding: 2px 10px;\n  max-width: 250px;\n  height: 30px;\n  background-color: #fff418;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  :hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport { Form, FormLabel, Input, Button };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormLabel, Input, Button } from './StyledComponents';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactsForm extends Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n  };\n\n  state = INITIAL_STATE;\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (!name || !number) {\n      alert('You have not entered all the data');\n      return;\n    }\n\n    if (Number.isNaN(+this.state.number)) {\n      alert('Phone number must contain only numbers');\n      return;\n    }\n    this.props.addContact(this.state);\n    this.setState(INITIAL_STATE);\n  };\n\n  resetForm = () => this.state(INITIAL_STATE);\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmitForm}>\n        <FormLabel>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={this.handleInputChange}\n          />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <Input\n            name=\"number\"\n            type=\"tel\"\n            value={number}\n            placeholder=\"Enter phone number\"\n            onChange={this.handleInputChange}\n          />\n        </FormLabel>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    );\n  }\n}\n\nexport default ContactsForm;\n","import styled from 'styled-components';\n\nconst TaskList = styled.ul`\n  max-width: 700px;\n  margin: 0 auto;\n`;\nconst TaskItem = styled.li`\n  padding: 5px 5px 5px 5px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  /* background-color:grey; */\n  background-color: #fff;\n  :not(:nth-child(odd)) {\n    background-color: #cacaca;\n  }\n  border: 1px solid black;\n  border-radius: 0.5rem;\n  margin-bottom: 10px;\n  box-shadow: 10px 5px 5px grey;\n`;\nconst TaskItemElements = styled.p`\n  font-weight: 500;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nconst Button = styled.button`\n  padding: 5px 10px;\n  max-width: 200px;\n  height: 20px;\n  background-color: goldenrod;\n  border: none;\n  border-radius: 0.5rem;\n  font-size: 0.6rem;\n  color: #fff;\n  text-transform: uppercase;\n  cursor: pointer;\n`;\nexport { TaskList, TaskItem, TaskItemElements, Button };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TaskList,\n  TaskItem,\n  TaskItemElements,\n  Button,\n} from './StyledComponents';\n\nexport default function ContactsList({ items, onDeleteContact }) {\n  return (\n    <TaskList>\n      {items.map(i => (\n        <TaskItem key={i.id}>\n          <TaskItemElements>{i.name} :</TaskItemElements>\n          <TaskItemElements>{i.number}</TaskItemElements>\n          <Button type=\"button\" onClick={() => onDeleteContact(i.id)}>\n            Delete\n          </Button>\n        </TaskItem>\n      ))}\n    </TaskList>\n  );\n}\n\nContactsList.propTypes = {\n  items: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 20px 0px 20px;\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  background-color: #18f0ff;\n`;\nconst Title = styled.h2`\n  width: 100%;\n  text-align: center;\n  font-size: 2rem;\n  color: #1834ff;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: 40px;\n`;\n\nexport { Section, Title };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section, Title } from './StyledComponents';\n\nexport default function SectionBlock({ title, children }) {\n  return (\n    <Section>\n      <Title>{title}</Title>\n      {children}\n    </Section>\n  );\n}\n\nSectionBlock.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst FilterBlock = styled.div`\n  width: 100%;\n  padding-bottom: 20px;\n  margin-top: 10px;\n`;\nconst Label = styled.label`\n  width: 100%;\n  font-weight: 500;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\nconst Title = styled.p`\n  width: 100%;\n  /* text-align:center; */\n  margin-bottom: 5px;\n  margin-left: 205px;\n  color: #ff188c;\n`;\nconst Input = styled.input`\n  width: 30%;\n`;\nexport { FilterBlock, Label, Title, Input };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterBlock, Label, Title, Input } from './StyledComponents';\n\nexport default function FilterContacts({ value, OnInputFilter }) {\n  return (\n    <FilterBlock>\n      <Label>\n        <Title>Find Contacts by name</Title>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={event => OnInputFilter(event.target.value)}\n        />\n      </Label>\n    </FilterBlock>\n  );\n}\n\nFilterContacts.propTypes = {\n  OnInputFilter: PropTypes.func,\n  value: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport ContactsForm from './ContactsForm';\nimport ContactsList from './ContactsList';\nimport SectionBlock from './Section';\nimport ContactsFilter from './ContactsFilter';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    nameFilter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} is in the list of your contacts`);\n      return;\n    }\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState(state => {\n      return { contacts: [...state.contacts, contact] };\n    });\n  };\n\n  filterContactList = () => {\n    return this.state.contacts.filter(item =>\n      item.name.toLowerCase().includes(this.state.nameFilter.toLowerCase()),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(e => e.id !== id),\n      };\n    });\n  };\n\n  contactsFilterInput = inputValue => {\n    this.setState({\n      nameFilter: inputValue,\n    });\n  };\n\n  render() {\n    const { nameFilter } = this.state;\n    const visibleContacts = this.filterContactList();\n    return (\n      <>\n        <SectionBlock title=\"Phonebook\">\n          <ContactsForm addContact={this.addContact} />\n          <ContactsFilter\n            value={nameFilter}\n            OnInputFilter={this.contactsFilterInput}\n          />\n          <ContactsList\n            items={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </SectionBlock>\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}